@using Microsoft.AspNetCore.Components.Web
@namespace BlazorApp1.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <base href="~/" />
        <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
        <link href="css/site.css" rel="stylesheet" />
        <link href="BlazorApp1.styles.css" rel="stylesheet" />
        <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    </head>
    <body>
        @RenderBody()

        <div id="blazor-error-ui">
            <environment include="Staging,Production">
                An error has occurred. This application may no longer respond until reloaded.
            </environment>
            <environment include="Development">
                An unhandled exception has occurred. See browser dev tools for details.
            </environment>
            <a href="" class="reload">Reload</a>
            <a class="dismiss">🗙</a>
        </div>
        <input type="hidden" id="txtPos1"/>
        <input type="hidden" id="coordi"/>
        <script src="_framework/blazor.server.js"></script>


        <script>
            var options = {
                enableHighAccuracy: true,
                timeout: 10000,
                maximumAge: 0
            }

            async function success(pos) {
                var crd = pos.coords;
                console.log('Your current position is:');
                console.log(`Latitude : ${crd.latitude}`);
                console.log(`Longitude: ${crd.longitude}`);
                console.log(`More or less ${crd.accuracy} meters.`);
                const msg = await GreetingHelpers.dotNetHelper.invokeMethodAsync('GetCoordinates', crd.latitude, crd.longitude);
                document.getElementById(`weatherInfo`).innerText = msg;
            }

            function error(err) {
              console.warn(`ERROR(${err.code}): ${err.message}`);
            }

            /*window.setElementText1 = (element, text) => element.innerText = text;*/

            class GreetingHelpers {
                static dotNetHelper;

                static setDotNetHelper(value) {
                    GreetingHelpers.dotNetHelper = value;
                    navigator.geolocation.getCurrentPosition(success, error, options);
                }
            }

            window.GreetingHelpers = GreetingHelpers;

        </script>
    </body>
</html>
